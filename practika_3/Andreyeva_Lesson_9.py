# 1. На входе пользователь вводит несколько элементов через пробел.
# На выходе - количество элементов, которые не повторяются.
# 1 2 3 4 4 4 4 5 -> 5
#a = map(int,input().split())
#b = len(set(a))
#print(b)

# 2. На входе пользователь дважды вводит несколько элементов через пробел.
# На выходе - количество элементов, которые содержатся одновременно в первом и втором списке.
# 1 2 3 4 5 6 6
# 6 7 5 8 8 9 0
# -> 2
#a = {2, 4, 6, 6, 6}
#b = {2, 4, 6, 6, 7, 6}
#print(len(a.intersection(b)))



# 3. На входе пользователь дважды вводит несколько элементов через пробел.
# На выходе - вывести совпадающие элементов в порядке возрастания
# 1 2 3 4 5 6 6
# 6 7 5 8 8 9 0
# -> 5 6
#a = {4, 6, 6, 6, 2}
#b = {4, 6, 6, 7, 6, 2}
#print(a.intersection(b))

# 5. (дополнительно) Есть текст. Пользователь ничего не вводит.
# На выходе указать, сколько различных слов было в тексте (толкьо слова!)

#ИЗ ЭКЗАМЕНА!!!
#3.	Напишите программу, которая запрашивает у пользователя список слов и выводит
#на экран словарь, в котором ключами являются уникальные слова из списка,
#а значениями - количество раз, которое каждое слово встречается в списке.
#a = [5, 25, 3, 1, 2, 6, 6, 1, 1, 25, 3]
#    [9, 13, 1, 3, 7, 3, 1, 1, 7, 1, 7, 9]
# создаем пустой словарь
#rez = {}
# в процессе итерации по списку
#for el in a:
    # проверяем есть ли в словаре
    # ключ с элементом `el`
 #   if rez.get(el, None):
        # если есть, то увеличиваем
        # счетчик с этим ключом нa 1
 #       rez[el] += 1
#    else:
        # если нет, то создаем такой
        # ключ со значением, равным 1
#        rez[el] = 1

# смотрим что получилось
#print(rez)
# {9: 2, 13: 1, 1: 4, 3: 2, 7: 3}

# чтобы было нагляднее, можно отсортировать словарь
# по значению (количеству появлений элементов в списке)
#rez_sorted = sorted(rez.items(), key=lambda x: x[1], reverse=True)
#print(dict(rez_sorted))
# {1: 4, 7: 3, 9: 2, 3: 2, 13: 1}


                    #ДОЛГ ПО Д.З. (СПИСКИ)

#1. В списке, содержащем положительные и отрицательные целые числа, вычислите сумму
# чётных положительных элементов.

#a = (2, -4, -1, 1, 5, 4, 5, 6, 10, -10, 1)
#sum = 0
#for i in a:
    #if i > 0 anl i % 2:
        #sum += i
#print(f'Сумма положительных четных чисел: {sum}')

#2. Найти в списке те элементы, значение которых меньше среднего арифметического,
# взятого от всех элементов списка.
#arr = [10,12,14]
#summa = 0 #счетчик суммы
#sred = 1 #счетчик произведения
#ints = [1, 2, 3, 4, 5]
#avg = sum(ints) / len(ints)
#print(avg)
#elem = 0
#for i in ints:
#    elem += i
#    if i < avg:
#        print(elem)
 #   summa += i if i < avg and i != avg:
  #  sred *= summa/len(arr)
#
#print(f'Сумма: {summa}'f' Сред.арифм.: {sred}')
